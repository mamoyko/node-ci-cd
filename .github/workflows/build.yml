name: Build and Push to NodeJs Image to ECR
on: 
  push:
    branches: [ main ]
jobs:
  build-container:
    name: Build and run node ci/cd
    runs-on: ubuntu-latest
    steps:
      -
        name: Node version
        run: node --version
      -
        name: NPM Version
        run: npm --version
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ap-southeast-1

      -
        name: Login to aws ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      -
        name: Install Dependencies
        run: npm install
      - 
        name: Unit test
        run: npm run test

      - 
        name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: node-ci-cd
          IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - run: npm install
      #   name: install dependencies
      # - run: npm run test
      #   name: unit Test
      # - run: npm run build
      #   name: build app
      # - uses: actions/upload-artifact@v3
      #   name: upload artifacts dist build
      #   with:
      #     name: dist-build
      #     path: dist/
  # release-project:
  #   name: Release project
  #   runs-on: ubuntu-latest
  #   needs: build-container
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: dist-build
  #     - name: Test artificact download
  #       run: ls -R
  #     - name: Archive site content
  #       uses: thedoctor0/zip-release@master
  #       with:
  #         filename: app.zip
  #     - name: create release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.run_number }}
  #         release_name: Release ${{ github.run_number }}

name: Node CI/CD
on: push
jobs:
  build-container:
    name: Build and run node ci/cd
    runs-on: ubuntu-latest
    steps:
      -
        name: Node version
        run: node --version
      -
        name: NPM Version
        run: npm --version
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      -
        name: Install Dependencies
        run: npm install
      - 
        name: Unit test
        run: npm run test
      -
        name: Docker build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCER_USERNAME }}/node-ci-cd:latest, ${{ secrets.DOCER_USERNAME }}/node-ci-cd:${{ github.run_number }}

      # - run: npm install
      #   name: install dependencies
      # - run: npm run test
      #   name: unit Test
      # - run: npm run build
      #   name: build app
      # - uses: actions/upload-artifact@v3
      #   name: upload artifacts dist build
      #   with:
      #     name: dist-build
      #     path: dist/
  # release-project:
  #   name: Release project
  #   runs-on: ubuntu-latest
  #   needs: build-container
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: dist-build
  #     - name: Test artificact download
  #       run: ls -R
  #     - name: Archive site content
  #       uses: thedoctor0/zip-release@master
  #       with:
  #         filename: app.zip
  #     - name: create release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.run_number }}
  #         release_name: Release ${{ github.run_number }}
